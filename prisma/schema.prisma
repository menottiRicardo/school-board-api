// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  STUDENT
  TEACHER
  PARENT
}

enum GradeType {
  NOTA_DIARIA
  APRECIACION
  TRIMESTRAL
}

model School {
  id            String         @id @default(uuid())
  schoolName    String
  academicYears AcademicYear[]
}

model AcademicYear {
  id         String      @id @default(uuid())
  year       String
  startDate  DateTime
  endDate    DateTime
  schoolName String
  schoolId   String
  school     School      @relation(fields: [schoolId], references: [id])
  periods    Period[]
  classrooms Classroom[]
  subjects   Subject[]
}

model Period {
  id             String       @id @default(uuid())
  startDate      DateTime
  endDate        DateTime
  periodName     String
  isActive       Boolean      @default(false)
  assignments    Assignment[]
  academicYearId String
  academicYear   AcademicYear @relation(fields: [academicYearId], references: [id])
}

model Classroom {
  id             String       @id @default(uuid())
  name           String
  users          User[]
  teacherId      String
  academicYearId String
  assignments    Assignment[]
  academicYear   AcademicYear @relation(fields: [academicYearId], references: [id])
  subjects       Subject[]
}

model Subject {
  id             String       @id @default(uuid())
  subjectName    String
  teacherId      String
  teacher        User         @relation(fields: [teacherId], references: [id])
  classrooms     Classroom[]
  assignments    Assignment[]
  academicYearId String
  academicYear   AcademicYear @relation(fields: [academicYearId], references: [id])
}

model User {
  id        String      @id @default(uuid())
  cid       String      @unique
  name      String
  lastname  String
  password  String?
  role      Role        @default(STUDENT)
  classroom Classroom[]
  subjects  Subject[]
  grades    Grade[]
}

model Assignment {
  id          String    @id @default(uuid())
  name        String
  description String
  classroom   Classroom @relation(fields: [classroomId], references: [id])
  classroomId String
  dueDate     DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  subject     Subject   @relation(fields: [subjectId], references: [id])
  subjectId   String
  period      Period?   @relation(fields: [periodId], references: [id])
  periodId    String?
  grades      Grade[]
  type        GradeType @default(NOTA_DIARIA)
}

model Grade {
  id           String     @id @default(uuid())
  value        Float // This can be a number or a letter, depending on your grading system.
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  Assignment   Assignment @relation(fields: [assignmentId], references: [id])
  assignmentId String
  student      User       @relation(fields: [studentId], references: [id])
  studentId    String
}
